{"version":3,"sources":["GameCanvas.js","components/container.js","hooks/useInterval.js","GameGraph.js","components/index.js","GameHeader.js","Game.js","components/PageWrapper.js","components/PlayerScoreboard.js","components/Table.js","components/RecentGames.js","HomePage.js","components/nav_bar.js","PlayerPage.js","App.js","index.js"],"names":["stars_buffer","planets_buffer","last_gameId","Container","withStyles","theme","root","maxWidth","margin","classes","className","children","classnames","useInterval","callback","delay","start","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","GameGraph","memo","game","turn","dispatch","show","arwesShow","data","label","color","maxY","idx","length","round","fleets","fi","fleet","owner_id","ships","pi","planets","planet","player_id","push","x","y","Math","max","VictoryTheme","material","axis","style","stroke","tickLabels","fill","grid","width","containerComponent","cursorLabelComponent","display","cursorDimension","onCursorChange","d","type","value","ceil","map","key","strokeWidth","animate","withCoolSounds","InnerComp","withSounds","props","sounds","players","SoundWords","Button","Words","GameHeader","themes","heading","paddingLeft","padding","paddingRight","marginTop","gameName","flexGrow","opponents","fontSize","marginBottom","opponent","justifyContent","vs","textAlign","info","history","useState","showContent","setShowContent","setTimeout","layer","href","onClick","BASE_URL","icon","faScroll","finished","small","loadingElo","elodiff","Number","toFixed","default_shades","player1_shades","player2_shades","GameCanvas","gameId","ref","undefined","canvas","getComputedStyle","getPropertyValue","slice","height","document","createElement","c","getContext","n_stars","floor","random","n","r","beginPath","fillStyle","moveTo","arc","PI","bc","translate","total_production","production","sqrt","alpha","i","beta","closePath","clearRect","drawImage","planet_r","log","globalAlpha","total_ships","dx","target","origin","dy","done","eta","save","rotate","atan2","lineTo","restore","game_over","winner","font","textBaseline","fillText","render","computeRoundData","add","a","b","join","reducer","state","action","min","playback","newGame","newGameMap","Object","values","sort","r1","r2","console","Error","Game","frames","frameContent","span","controls","controlElements","marginLeft","marginRight","cursor","showLatest","useParams","playerName","useReducer","useHistory","setInfo","loadLatestGameForPlayer","useCallback","fetch","json","last","loadLatestGame","lastGameId","last_games","game_id","loadInfo","loadGameData","level","corners","anim","entered","faChevronLeft","size","fixedWidth","faPauseCircle","faPlay","faChevronRight","headers","dataset","PageWrapper","PlayerScoreboard","firstPlace","textTransform","title","scoreboardData","isGlobalRanking","displayedTableItems","setDisplayedTableItems","refDisplayedTableItems","node","entry","index","Table","styles","Animation","animation","minWidth","etc","cls","cx","timeout","animTime","status","header","filter","item","index2","defaultProps","AnimationComponent","RecentGames","versusColumnEntry","eloLost","secondary","light","lastGamesData","focusedPlayer","player1","player2","leftPlayer","rightPlayer","elodelta","HomePageRecentGamesTitle","recentGamesContainer","latestLink","HomePageFrameContent","gameData","useDebounce","delayedShow","delayedShow2","num_games","toString","s","m","l","highscores","HomePage","setGameData","loadData","names","NavBar","container","logo","headingText","paddingTop","linkContainer","alignItems","link","linkIcon","name","setName","faSatellite","faRocket","PlayerPage","summary","rankLoading","playerData","setPlayerData","rank","username","ask","Howl","src","process","click","deploy","error","information","typing","warning","audio","mute","App","wrapperAnimEntered","path","AppWrapper","createTheme","background","pattern","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e81682c7.chunk.js","sourcesContent":["import React, {useEffect, useRef, memo} from 'react';\n\nlet stars_buffer;\nlet planets_buffer;\nlet last_gameId;\n\nconst default_shades = [\"#BFBBB8\", \"#E4E0DC\", \"#807D7A\", ];\nconst player1_shades = [\"#00BF0A\",\"#00E60B\", \"#004003\"];\nconst player2_shades = [\"#BF0020\", \"#E60028\", \"#800015\",];\n\nexport const GameCanvas = memo(({turn, info, gameId}) => {\n    let ref = useRef();\n\n    useEffect(() => {\n        if (!turn || !info || gameId === undefined) {\n            return;\n        }\n\n        if (gameId !== last_gameId) {\n           stars_buffer = null;\n           planets_buffer = null;\n           last_gameId = gameId;\n        }\n\n        let canvas = ref.current;\n\n        let width = getComputedStyle(canvas).getPropertyValue('width').slice(0, -2);\n        let height = getComputedStyle(canvas).getPropertyValue('height').slice(0, -2);\n\n        canvas.width = width;\n        canvas.height = height;\n        canvas.style.width = `${width}px`;\n        canvas.style.height = `${height}px`;\n\n        const size_scale = 15;\n        const planet_canvas_size = 50;\n        const fleet_canvas_size = 5;\n        const max_production = 18;\n        const star_size = 4;\n\n        // Off-screen canvas for stars\n        if (!stars_buffer) {\n            stars_buffer = document.createElement('canvas');\n            stars_buffer.width = width;\n            stars_buffer.height = height;\n            const c = stars_buffer.getContext(\"2d\");\n            const n_stars = Math.floor(50 + Math.random()*50);\n            for (let n = 0; n < n_stars; n++) {\n                const x = Math.random()*width;\n                const y = Math.random()*height;\n                const r = Math.random() * star_size / 2;\n                c.beginPath();\n                c.fillStyle = \"white\";\n                c.moveTo(x, y);\n                c.arc(x, y, r, 0, 2*Math.PI, false);\n                c.fill();\n            }\n        }\n\n\n        // Off-screen canvas for planets\n        if (!planets_buffer && turn && turn.planets) {\n            planets_buffer = document.createElement('canvas');\n            planets_buffer.width = width;\n            planets_buffer.height = height;\n            const bc = planets_buffer.getContext(\"2d\");\n            bc.translate(width/2, height/2);\n\n            const planets = turn.planets;\n            for (let idx = 0; idx < planets.length; idx++) {\n                const planet = planets[idx];\n                const total_production = planet.production[0] + planet.production[1] + planet.production[2];\n                const r = Math.sqrt(total_production / (max_production*2)) * planet_canvas_size;\n                let alpha = - Math.PI/2;\n                for (let i = 0; i < 3; i++) {\n                    const beta = alpha + 2 * Math.PI * (planet.production[i]/total_production);\n                    bc.fillStyle = default_shades[i];\n                    bc.beginPath();\n                    bc.moveTo(\n                        planet.x * -size_scale,\n                        planet.y * size_scale\n                    );\n                    bc.arc(\n                        planet.x * -size_scale,\n                        planet.y * size_scale,\n                        r,\n                        alpha,\n                        beta,\n                        false\n                    );\n                    bc.closePath();\n                    bc.fill();\n                    alpha = beta;\n                }\n            }\n        }\n\n\n        const render = () => {\n            const c = canvas.getContext(\"2d\");\n            c.translate(width/2, height/2);\n\n            c.clearRect(-canvas.width/2,-canvas.height/2,canvas.width,canvas.height);\n            if (!turn || !turn.planets) return;\n\n            c.drawImage(stars_buffer, -canvas.width/2, -canvas.height/2);\n\n            const planets = turn.planets;\n            for (let idx = 0; idx < planets.length; idx++) {\n                const planet = planets[idx];\n                const total_production = planet.production[0] + planet.production[1] + planet.production[2];\n                const planet_r = Math.sqrt(total_production / (max_production*2)) * planet_canvas_size;\n\n                // ship numbers per type\n                for (let type = 0; type < 3; type++) {\n                    const r = Math.log(planet.ships[type] / max_production + 1) * fleet_canvas_size + planet_r + 2;\n                    c.beginPath();\n                    c.fillStyle = [default_shades, player1_shades, player2_shades][planet.owner_id][type];\n                    c.moveTo(\n                        planet.x * -size_scale,\n                        planet.y * size_scale\n                    );\n                    c.arc(\n                        planet.x * -size_scale,\n                        planet.y * size_scale,\n                        r, Math.PI * (2/3 * type - 0.5), Math.PI * (2/3*(type+1) - 0.5), false);\n                    c.fill();\n                }\n\n                // separator between ships and planet\n                c.beginPath();\n                c.fillStyle = \"black\";\n                c.moveTo(\n                    planet.x * -size_scale,\n                    planet.y * size_scale\n                );\n                c.arc(\n                    planet.x * -size_scale,\n                    planet.y * size_scale,\n                    planet_r + 2, 0, 2 * Math.PI, false);\n                c.fill();\n            }\n\n            c.drawImage(planets_buffer, -canvas.width/2, -canvas.height/2);\n\n            // semi-transparent planet owner overlay\n            c.globalAlpha = 0.4;\n            for (let idx = 0; idx < planets.length; idx++) {\n                const planet = planets[idx];\n                if (planet.owner_id !== 0) {\n                    const total_production = planet.production[0] + planet.production[1] + planet.production[2];\n                    const planet_r = Math.sqrt(total_production / (max_production*2)) * planet_canvas_size;\n                    c.beginPath();\n                    c.fillStyle = [\"invalid\", \"green\", \"red\"][planet.owner_id];\n                    c.moveTo(\n                        planet.x * -size_scale,\n                        planet.y * size_scale\n                    );\n                    c.arc(\n                        planet.x * -size_scale,\n                        planet.y * size_scale,\n                        planet_r, 0, 2 * Math.PI, false);\n                    c.fill();\n                }\n            }\n            c.globalAlpha = 1;\n\n            const fleets = turn.fleets;\n            for (let idx = 0; idx < fleets.length; idx++) {\n                const fleet = fleets[idx];\n                const total_ships = fleet.ships[0] + fleet.ships[1] + fleet.ships[2];\n                if (total_ships === 0) {\n                    continue;\n                }\n\n                const dx = planets[fleet.target].x - planets[fleet.origin].x;\n                const dy = planets[fleet.target].y - planets[fleet.origin].y;\n                const d = Math.ceil(Math.sqrt(dx * dx + dy * dy));\n                const tl = (fleet.eta + 1) - turn.round;\n                const done = 1 - (tl / d);\n                const x = planets[fleet.origin].x + done * dx;\n                const y = planets[fleet.origin].y + done * dy;\n                const r = Math.sqrt(total_ships / (max_production*2)) * fleet_canvas_size;\n\n                c.save();\n                c.translate(x * -size_scale, y * size_scale);\n                c.rotate(Math.atan2(dx,dy));\n\n                // Triangle\n                c.beginPath();\n                c.fillStyle = [\"invalid\", \"green\", \"red\"][fleet.owner_id];\n                c.moveTo(-(r+1),0);\n                c.lineTo(0,2*r);\n                c.lineTo( (r+1),0);\n                c.closePath();\n                c.fill();\n\n                c.beginPath();\n                c.moveTo(0,0);\n                c.arc(0,0,r+1,Math.PI,0,false);\n                c.closePath();\n                c.fill();\n\n                // Pie-Chart at the end\n                let alpha = Math.PI;\n                for (let i = 0; i < 3; i++) {\n                    const beta = alpha + Math.PI * (fleet.ships[i]/total_ships);\n                    c.fillStyle = default_shades[i];\n                    c.beginPath();\n                    c.moveTo(0,0);\n                    c.arc(0,0,r,alpha,beta,false);\n                    c.closePath();\n                    c.fill();\n                    alpha = beta;\n                }\n                c.restore();\n            }\n\n            // Last round\n            if (turn.game_over) {\n                let winner = turn.winner;\n                if (!winner) {\n                    winner = 0\n                }\n                c.fillStyle = [\"lightgrey\", player1_shades[1], player2_shades[1]][winner];\n                c.font = \"bold 60px sans-serif\";\n                c.textAlign = \"center\";\n                c.textBaseline = \"ideographic\";\n                c.fillText([\n                    \"draw!\",\n                    info[\"player1\"] + \" wins!\",\n                    info[\"player2\"] + \" wins!\"\n                ][winner], 0, 0);\n            }\n        };\n\n        render();\n    });\n\n    return (\n            <canvas\n                ref={ref}\n                width={1200}\n                height={500} />\n    );\n});","import {withStyles} from '@arwes/arwes';\nimport React from 'react';\nimport classnames from 'classnames';\n\nconst styles = theme => ({\n    root: {\n        maxWidth: 1216,\n        margin: '0 auto',\n    },\n});\n\nexport const Container = withStyles(styles)(({classes, className, children}) => {\n    return <div className={classnames(classes.root, className)}>{children}</div>;\n});\n","import { useEffect, useRef } from \"react\";\n\nexport const useInterval = (callback, delay, start) => {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback, start]);\n\n  useEffect(() => {\n      if (start) callback();\n  }, []);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import React, {memo} from 'react';\n\nimport {Loading} from '@arwes/arwes';\nimport {VictoryCursorContainer, VictoryChart, VictoryTheme, VictoryLine} from \"victory\";\n\nexport const GameGraph = memo(({game, turn, dispatch, show, arwesShow}) => {\n    const data = [{\n        label: 'neutral',\n        color: '#ccc',\n        data: []\n    }, {\n        label: 'player1',\n        color: '#6f6',\n        data: []\n    }, {\n        label: 'player2',\n        color: '#f66',\n        data: []\n    }];\n\n    let maxY = 0;\n    if (game) {\n        for (let idx = 0; idx < game.length; idx++) {\n            const round = game[idx];\n            const fleets = [0, 0, 0];\n            for (let fi = 0; fi < round.fleets.length; fi++) {\n                const fleet = round.fleets[fi];\n                fleets[fleet.owner_id] += fleet.ships[0] + fleet.ships[1] + fleet.ships[2];\n            }\n            for (let pi = 0; pi < round.planets.length; pi++) {\n                const planet = round.planets[pi];\n                fleets[planet.owner_id] += planet.ships[0] + planet.ships[1] + planet.ships[2];\n            }\n            for (let player_id = 0; player_id <= 2; player_id++) {\n                data[player_id].data.push({x: idx, y: fleets[player_id]});\n                maxY = Math.max(maxY, fleets[player_id]);\n            }\n        }\n    }\n\n    const theme = VictoryTheme.material;\n    theme.axis.style.axis.stroke = \"#8bebfe\";\n    theme.axis.style.tickLabels.fill = \"#8bebfe\";\n    theme.axis.style.grid.stroke = \"#ccc\";\n\n\n    return (\n        show && game ?\n            <VictoryChart theme={VictoryTheme.material} width={1200}\n                          containerComponent={\n                              <VictoryCursorContainer cursorLabelComponent={<div style={{display: \"none\"}} />}\n                                                      cursorDimension=\"x\"\n                                                      onCursorChange={d => d && dispatch({type: 'setMove', value: Math.ceil(d)})} />\n                          }>\n                {data.map((d, idx) =>\n                    (<VictoryLine\n                        style={{ data: { stroke: d.color } }}\n                        data={d.data}\n                        key={idx}\n                    />))}\n                <VictoryLine\n                    style={{data: { stroke: \"#8bebfe\", strokeWidth: \"4px\"}}}\n                    data={[{x:turn, y:0}, {x:turn, y: maxY}]}\n                />\n            </VictoryChart>\n            :\n            arwesShow && <Loading animate/> || null\n    );\n});","import { Button, Words } from '@arwes/arwes';\nimport React from 'react';\n\nimport { withSounds } from \"@arwes/sounds\";\n\nconst withCoolSounds = () => InnerComp =>\n  withSounds()(props => <InnerComp {...props} sounds={props.players} />);\n\nexport const SoundButton = withCoolSounds()(Button);\nexport const SoundWords = withCoolSounds()(Words);\n\n// Links don't do sound\n// export const SoundLink = withCoolSounds()(Link);\n","import React, {useEffect, useState} from 'react';\nimport {BASE_URL} from \"./Game\";\nimport {Loading, Words, Link, withStyles} from \"@arwes/arwes\";\nimport {SoundWords} from \"./components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faScroll} from \"@fortawesome/free-solid-svg-icons\";\n\nconst styles = themes => {\n    return {\n        heading: {\n            paddingLeft: themes.padding,\n            paddingRight: themes.padding,\n            marginTop: themes.margin / 2,\n            display: \"flex\",\n        },\n        gameName: {\n            flexGrow: \"1\"\n        },\n        opponents: {\n            display: \"flex\",\n            fontSize: \"1.5em\",\n            marginBottom: themes.margin/2,\n        },\n        opponent: {\n            width: \"30%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            flexGrow: 1\n        },\n        vs: {\n            width: \"50px\",\n            textAlign: \"center\"\n        }\n    };\n};\n\nexport const GameHeader = withStyles(styles)(({info, history, className, classes, show, arwesShow}) => {\n\n    const [showContent, setShowContent] = useState(false);\n    // Add a nice delay to between Heading and Content animation\n    useEffect(\n        () => {\n            if (show && !showContent) {\n                setTimeout(() => {\n                    setShowContent && setShowContent(true);\n                }, 2000);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [show],\n    );\n\n    return info ?\n        (\n            <div className={className}>\n                <div>\n                    <span className={classes.heading}>\n                        <span className={classes.gameName}>\n                        <SoundWords animate layer='primary' show={show}>#</SoundWords>\n                        <Link href=\"javascript:void(0)\" onClick={() => history.push(`/game/${info[\"game_id\"]}`)}>{`${info[\"game_id\"]}`}</Link>\n                            <span style={{padding:\"10px\"}}>&middot;</span>\n                        <Link href={`${BASE_URL}/${info[\"game_log_name\"]}`}>\n                            <FontAwesomeIcon icon={faScroll} />\n                        </Link>\n                        </span>\n                        {!info.finished && <Loading animate small className={classes.loadingElo}/> }\n                    </span>\n                    <div className={classes.opponents}>\n                        <span className={classes.opponent}>\n                            <Link href=\"javascript:void(0)\" onClick={() => history.push(\"/player/\" + info[\"player1\"])}>\n                                <Words animate layer='success' show={show}>{info['player1']}</Words>\n                                {<sup>\n                                    <Words layer={info.elodiff > 0 ? 'primary': 'secondary'} animate show={show && info.finished}>\n                                        {(info.elodiff > 0 ? \"+\" : \"\") + Number(info.elodiff).toFixed(3)}\n                                    </Words>\n                                </sup>}\n                                {\" \"}\n                                <Words animate layer='primary' show={show}>{`(rank #${info[\"rank1\"]})`}</Words>\n                            </Link>\n                        </span>\n                        <Words layer='primary' className={classes.vs} animate show={showContent}>vs</Words>\n                        <span className={classes.opponent}>\n                            <Link href=\"javascript:void(0)\" onClick={() => history.push(\"/player/\" + info[\"player2\"])}>\n                                <Words animate layer='alert' show={show}>{info['player2']}</Words>\n                                {<sup>\n                                    <Words layer={-info.elodiff > 0 ? 'primary': 'secondary'} animate show={show && info.finished}>\n                                        {(-info.elodiff > 0 ? \"+\" : \"\") + Number(-info.elodiff).toFixed(3)}\n                                    </Words>\n                                </sup>}\n                                {\" \"}\n                                <Words animate layer='primary' show={show}>{`(rank #${info[\"rank2\"]})`}</Words>\n                            </Link>\n                        </span>\n                    </div>\n                </div>\n\n\n            </div>\n        ) :\n        arwesShow && <Loading animate/> || null\n});","import React, {useState, useReducer, useCallback, useEffect} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    faChevronLeft,\n    faChevronRight,\n    faPlay,\n    faPauseCircle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {Table, Frame, Button, Loading, Project, Words, Link, withStyles } from \"@arwes/arwes\";\nimport {Container} from \"./components/container\";\nimport {useHistory, useParams} from \"react-router\";\nimport {useInterval} from \"./hooks/useInterval\";\nimport {GameGraph} from \"./GameGraph\";\nimport {GameHeader} from \"./GameHeader\";\nimport {GameCanvas} from \"./GameCanvas\";\n\n\nexport const BASE_URL = process.env.NODE_ENV === \"production\" ? \"/api\" : \"http://localhost:8080/api\";\n\nconst styles = themes => {\n    return {\n        frames: {\n            marginTop: themes.margin,\n        },\n        frameContent: {\n            padding: themes.padding,\n        },\n        heading: {\n            \"@global\": {\n                \"h1\": {\n                    width:\"100%\",\n                    \"@global\": {\n                        span: {\n                            width: \"100%\",\n                        }\n                    }\n                }\n            },\n            width: \"100%\",\n        },\n        controls: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: themes.margin\n        },\n\n        controlElements: {\n            marginLeft: themes.margin,\n            marginRight: themes.margin,\n            cursor: \"pointer\"\n        }\n\n    };\n};\n\nconst computeRoundData = (round) => {\n    const ships      = [[0,0,0],[0,0,0],[0,0,0]];\n    const planets    = [0,0,0];\n    const fleets     = [0,0,0];\n    const production = [[0,0,0],[0,0,0],[0,0,0]];\n    const add = (a,b) => {\n        a[0] += b[0];\n        a[1] += b[1];\n        a[2] += b[2];\n    };\n\n    for (let fi = 0; fi < round.fleets.length; fi++) {\n        const fleet = round.fleets[fi];\n        fleets[fleet.owner_id] += 1;\n        add(ships[fleet.owner_id], fleet.ships);\n    }\n    for (let pi = 0; pi < round.planets.length; pi++) {\n        const planet = round.planets[pi];\n        planets[planet.owner_id] += 1;\n        add(ships[planet.owner_id], planet.ships);\n        add(production[planet.owner_id], planet.production);\n    }\n\n    return [\n        round[\"game_over\"] ? \"Final Standings\" : round.round,\n        ships[0][0] + ships[0][1] + ships[0][2] + ships[1][0] + ships[1][1] + ships[1][2] + ships[2][0] + ships[2][1] + ships[2][2],\n        planets[1], planets[2],\n        ships[1].join(\",\"), ships[2].join(\",\"),\n        production[1].join(\",\"), production[2].join(\",\"),\n        fleets[1],fleets[2]\n    ];\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'incrementMove':\n            if (!state.game || !state.game.length) return state;\n            return {...state, turn: Math.min(state.game.length-1, state.turn + 1),\n                playback: state.playback && (!state.game || !state.turn || state.turn + 1 >= state.game.length || !state.game[state.turn + 1].game_over)};\n        case 'setMove': {\n            return {...state, turn: action.value};\n        }\n        case 'decrementMove':\n            return {...state, turn: Math.max(0, state.turn - 1), playback: false};\n        case 'setMove':\n            return {...state, turn: action.value, playback: false};\n        case 'togglePlayback': {\n            return {...state, playback: !state.playback};\n        }\n        case 'setPlayback': {\n            return {...state, playback: action.value};\n        }\n        case 'updateGame': {\n            const newGame = [...(state.game || []), ...action.value];\n            const newGameMap = {};\n            for (const round of newGame) {\n                newGameMap[round.round] = round;\n            }\n\n            const newGamesFiltered = Object.values(newGameMap).sort((r1, r2) => r1.round - r2.round);\n\n            return {...state, game: newGamesFiltered};\n        }\n        case 'setGameId': {\n            console.log(\"setting gameId\", action);\n            return {...state, gameId: action.value, game: undefined};\n        }\n        default:\n            throw Error();\n    }\n};\n\nexport const Game = withStyles(styles)(({show, classes, showLatest}) => {\n    const {id, playerName} = useParams();\n    const [{turn, playback, game, gameId}, dispatch] = useReducer(reducer, {turn: 0, playback: false, game: undefined, gameId: id});\n    const history = useHistory();\n    const [info, setInfo] = useState(undefined);\n\n    const loadLatestGameForPlayer = useCallback(async () => {\n        if (playerName === undefined) return;\n        const data = await fetch(`${BASE_URL}/player/${playerName}/latest_game.json`) ;\n        const json = await data.json();\n\n        if (gameId !== json.last && json.last && (!game || !turn || (game.length && game[turn][\"game_over\"]) || !playback)) {\n            dispatch({type: 'setGameId', value: json.last});\n            dispatch({type: 'setPlayback', value: true});\n            dispatch({type: 'setMove', value: 0});\n            setInfo(null);\n        }\n    }, [game, turn, playerName, playback, setInfo]);\n\n    useInterval(loadLatestGameForPlayer, playerName === undefined ? null : 3000, true);\n\n    const loadLatestGame = useCallback(async () => {\n        if (!showLatest) return;\n        const data = await fetch(`${BASE_URL}/info.json`) ;\n        const json = await data.json();\n\n        const lastGameId = json && json.last_games && json.last_games.length && json.last_games[0] &&  json.last_games[0].game_id;\n\n        if (gameId !== lastGameId && lastGameId && (!game || !turn || (game.length && game[turn][\"game_over\"]) || !playback)) {\n            dispatch({type: 'setGameId', value: lastGameId});\n            dispatch({type: 'setPlayback', value: true});\n            dispatch({type: 'setMove', value: 0});\n            setInfo(null);\n        }\n    }, [turn, game, playback, setInfo]);\n\n    useInterval(loadLatestGame, !showLatest ? null : 3000, true);\n\n    const loadInfo = useCallback(async () => {\n        if (gameId !== undefined) {\n            const data = await fetch(`${BASE_URL}/game/${gameId}/info.json`);\n            const json = await data.json();\n            if (setInfo) setInfo(json);\n        }\n    }, [gameId, setInfo]);\n\n    useInterval(loadInfo, info && info.finished ? null : 1000, true);\n\n    const loadGameData = useCallback(async () => {\n        if (gameId !== undefined) {\n            const data = await fetch(`${BASE_URL}/game/${gameId}/rounds/${game && game.length || 0}`);\n            const json = await data.json();\n            dispatch({type: 'updateGame', value: json});\n        }\n    }, [gameId, game]);\n\n    useInterval(loadGameData, game && game.length && game[game.length -1]['game_over'] ? null : 500, true);\n\n    useInterval(() => playback && dispatch({type: 'incrementMove'}), playback? 10: null);\n\n    return (\n        <Container>\n            <Frame\n                animate={true}\n                level={3}\n                corners={4}\n                show={show}\n                layer='primary'>\n                {(anim) => <GameHeader playerName={playerName} info={info} history={history} show={anim.entered} arwesShow={show}/>}\n            </Frame>\n\n            <Frame\n                animate={true}\n                level={3}\n                corners={4}\n                show={show}\n                layer='primary'>\n                {(anim) =>\n                    <div className={classes.frameContent}>\n                        {show && <div className={classes.controls}>\n                            <Button animate layer='primary' onClick={() => dispatch({type: 'decrementMove'})} show={anim.entered}>\n                                {anim.entered && <FontAwesomeIcon className={classes.controlElements} icon={faChevronLeft} size=\"lg\"/>}\n                            </Button>\n                            <Button animate layer='primary' onClick={() => dispatch({type: 'togglePlayback'})} show={anim.entered}>\n                                {anim.entered && <FontAwesomeIcon fixedWidth className={classes.controlElements} icon={playback ? faPauseCircle : faPlay} size=\"lg\"/>}\n                            </Button>\n                            <Button animate layer='primary' onClick={() => dispatch({type: 'incrementMove'})} show={anim.entered}>\n                                {anim.entered && <FontAwesomeIcon className={classes.controlElements} icon={faChevronRight} size=\"lg\"/>}\n                            </Button>\n                        </div>}\n                        <GameGraph game={game} turn={turn} dispatch={dispatch} show={anim.entered} arwesShow={show}/>\n                    </div>\n                }\n            </Frame>\n\n            <Frame\n                className={classes.frames}\n                show={show}\n                animate={true}\n                level={3}\n                corners={4}\n                layer='primary'>\n                {(anim) => anim.entered && (game ?\n                        <GameCanvas turn={game[turn]} info={info} gameId={gameId}/> :\n                        show && <Loading animate/> || null\n                )}\n            </Frame>\n\n            <Frame\n                className={classes.frames}\n                show={show}\n                animate\n                level={3}\n                corners={4}\n                layer='primary'>\n                {(anim) => anim.entered && (info && game && game[turn] ?\n                        <div className={classes.frameContent}>\n                            <Table animate\n                                   headers={[\n                                       \"Round\",\n                                       \"Total Fleets\",\n                                       <Words layer=\"success\"><div>Planets</div>{`${info[\"player1\"]}`}</Words>,\n                                       <Words layer=\"alert\"><div>Planets</div>{`${info[\"player2\"]}`}</Words>,\n                                       <Words layer=\"success\"><div>Ships</div>{`${info[\"player1\"]}`}</Words>,\n                                       <Words layer=\"alert\"><div>Ships</div>{`${info[\"player2\"]}`}</Words>,\n                                       <Words layer=\"success\"><div>Production</div>{`${info[\"player1\"]}`}</Words>,\n                                       <Words layer=\"alert\"><div>Production</div>{`${info[\"player2\"]}`}</Words>,\n                                       <Words layer=\"success\"><div>Fleets</div>{`${info[\"player1\"]}`}</Words>,\n                                       <Words layer=\"alert\"><div>Fleets</div>{`${info[\"player2\"]}`}</Words>,\n                                   ]}\n                                   dataset={[computeRoundData(game[turn])]}/>\n                        </div>:\n                        show && <Loading animate/> || null\n                )\n                }\n            </Frame>\n\n        </Container>\n    );\n});\n","import React from 'react';\n\nimport { Container } from './container';\n\nexport const PageWrapper = ({children}) => <Container>{children}</Container>;\n","import {Heading, Link, Loading, Table, Words, withStyles} from '@arwes/arwes';\nimport {useHistory} from 'react-router-dom';\nimport React, {memo, useRef, useState} from 'react';\n\nimport {useInterval} from '../hooks/useInterval';\n\nconst styles = themes => ({\n    firstPlace: {\n        textTransform: 'uppercase',\n    },\n});\n\nexport const PlayerScoreboard = withStyles(styles)(\n    memo(({title, show, scoreboardData, classes, isGlobalRanking}) => {\n        const history = useHistory();\n        const [displayedTableItems, setDisplayedTableItems] = useState(0);\n        const refDisplayedTableItems = useRef(0);\n        useInterval(() => {\n            if (\n                scoreboardData &&\n                refDisplayedTableItems.current < scoreboardData.length\n            ) {\n                setDisplayedTableItems(refDisplayedTableItems.current + 1);\n                refDisplayedTableItems.current =\n                    refDisplayedTableItems.current + 1;\n            }\n        }, show ? 100 : null);\n\n        return (\n            <>\n                <Heading node={'h3'}>{title}</Heading>\n                {show && (scoreboardData ? (\n                    <Table\n                        animate\n                        headers={[]}\n                        dataset={scoreboardData.map((entry, index) => [\n                            index,\n                            <Link\n                                onClick={() =>\n                                    history.push(`/player/${entry[0]}`)\n                                }>\n                                <Words\n                                    animate\n                                    layer={\n                                        isGlobalRanking && index < 3\n                                            ? 'success'\n                                            : 'primary'\n                                    }\n                                    className={\n                                        isGlobalRanking && index === 0\n                                            ? classes.firstPlace\n                                            : ''\n                                    }\n                                    show={show && displayedTableItems > index}>\n                                    {entry[0]}\n                                </Words>\n                            </Link>,\n\n                            entry[1].toFixed(3),\n                        ])}\n                    />\n                ) : (\n                    <Loading />\n                ))}\n            </>\n        );\n    }),\n);\n","// NOTE (LinuCC) Copied from arwes\n\nimport { withStyles } from '@arwes/arwes';\nimport AnimationComponent from '@arwes/arwes/lib/Animation';\nimport React from 'react';\nimport cx from 'classnames';\nimport styles from '@arwes/arwes/lib/Table/styles';\n\nconst Table = withStyles(styles)((props) => {\n  const {\n    theme,\n    classes,\n    Animation,\n    animation,\n    animate,\n    show,\n    headers,\n    dataset,\n    minWidth,\n    className,\n    children,\n    ...etc\n  } = props;\n  const cls = cx(classes.root, className);\n\n  return (\n    <Animation\n      animate={animate}\n      show={show}\n      timeout={theme.animTime}\n      {...animation}\n    >\n      {anim => (\n        <div className={cx(cls, classes[anim.status])} {...etc}>\n          <div style={{ minWidth }}>\n            {!children && (\n              <table>\n                <thead>\n                  <tr>\n                    {headers.map((header, index) => (\n                      <th key={index}>{header}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {dataset\n                    .filter(item => !!item)\n                    .map((item, index) => (\n                  item.key && item.value ? (\n                      <tr key={item.key}>\n                        {item.value.map((value, index2) => (\n                        value.key && value.value ? (\n                          <td key={value.key}>{value.value}</td>\n                        ) : (\n                          <td key={index2}>{value}</td>\n                        )\n                        ))}\n                      </tr>\n                  ) : (\n                      <tr key={index}>\n                        {item.map((value, index2) => (\n                          <td key={index2}>{value}</td>\n                        ))}\n                      </tr>\n                  )\n                    ))}\n                </tbody>\n              </table>\n            )}\n            {children}\n          </div>\n        </div>\n      )}\n    </Animation>\n  );\n});\n\n// Table.propTypes = {\n//   Animation: PropTypes.any.isRequired,\n//\n//   theme: PropTypes.any.isRequired,\n//   classes: PropTypes.any.isRequired,\n//\n//   animate: PropTypes.bool,\n//   show: PropTypes.bool,\n//   animation: PropTypes.object,\n//\n//   /**\n//    * List of heading titles.\n//    */\n//   headers: PropTypes.array,\n//\n//   /**\n//    * List of rows with their lists of columns.\n//    */\n//   dataset: PropTypes.arrayOf(PropTypes.array),\n//\n//   /**\n//    * The table component can be the 100% width container.\n//    * Configure the min width of the content, if case the container width is less\n//    * than this minWidth, a horizontal scroll will appear.\n//    */\n//   minWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n//\n//   /**\n//    * If the actual HTML `<table />` is provided, the `headers` and `dataset`\n//    * are ignored.\n//    */\n//   children: PropTypes.any,\n//\n//   className: PropTypes.any\n// };\n\nTable.defaultProps = {\n  Animation: AnimationComponent,\n  show: true,\n  headers: [],\n  dataset: []\n};\n\n  export default Table;\n","import {Heading, Link, Loading, withStyles} from '@arwes/arwes';\nimport {useHistory} from 'react-router-dom';\nimport React, { memo, useRef, useState } from 'react';\n\nimport {SoundWords} from './';\nimport {useInterval} from '../hooks/useInterval';\nimport Table from './Table';\n\nconst styles = theme =>\n    console.info(theme.color) || {\n        versusColumnEntry: {\n            display: 'flex',\n            justifyContent: 'space-evenly',\n        },\n        eloLost: {\n            color: theme.color.secondary.light,\n        },\n    };\n\nexport const RecentGames = withStyles(styles)(\n    memo(({title, show, lastGamesData, classes, focusedPlayer}) => {\n        const history = useHistory();\n        const [displayedTableItems, setDisplayedTableItems] = useState(0);\n        const refDisplayedTableItems = useRef(0);\n        useInterval(() => {\n            if (\n                lastGamesData &&\n                refDisplayedTableItems.current < lastGamesData.length\n            ) {\n                setDisplayedTableItems(refDisplayedTableItems.current + 1);\n                refDisplayedTableItems.current =\n                    refDisplayedTableItems.current + 1;\n            }\n        }, show ? 100 : null);\n\n        return (\n            <>\n                <Heading node={'h3'}>{title}</Heading>\n                {show &&\n                    (lastGamesData ? (\n                        <Table\n                            animate\n                            dataset={lastGamesData.map(\n                                (\n                                    {game_id, player1, player2, elodiff},\n                                    index,\n                                ) => {\n                                    const [\n                                        leftPlayer,\n                                        rightPlayer,\n                                        elodelta,\n                                    ] =\n                                        !focusedPlayer ||\n                                        focusedPlayer === player1\n                                            ? [player1, player2, elodiff, false]\n                                            : [\n                                                  player2,\n                                                  player1,\n                                                  -elodiff,\n                                              ];\n                                    return {\n                                        key: `${game_id}`,\n                                        value: [\n                                            <Link\n                                                href=\"javascript:void(0)\"\n                                                onClick={() =>\n                                                    history.push(\n                                                        `/game/${game_id}`,\n                                                    )\n                                                }>\n                                                {game_id}\n                                            </Link>,\n                                            <div\n                                                className={\n                                                    classes.versusColumnEntry\n                                                }>\n                                                <Link\n                                                    href=\"javascript:void(0)\"\n                                                    onClick={() =>\n                                                        history.push(\n                                                            `/player/${leftPlayer}`,\n                                                        )\n                                                    }>\n                                                    <SoundWords\n                                                        layer={\n                                                            leftPlayer === player1\n                                                                ? 'success'\n                                                                : 'alert'\n                                                        }\n                                                        animate\n                                                        show={\n                                                            show &&\n                                                            displayedTableItems >\n                                                                index\n                                                        }>\n                                                        {leftPlayer}\n                                                    </SoundWords>\n                                                </Link>{' '}\n                                                <sub>\n                                                    {show &&\n                                                        displayedTableItems >\n                                                            index &&\n                                                        'vs'}\n                                                </sub>{' '}\n                                                <Link\n                                                    href=\"javascript:void(0)\"\n                                                    onClick={() =>\n                                                        history.push(\n                                                            `/player/${rightPlayer}`,\n                                                        )\n                                                    }>\n                                                    <SoundWords\n                                                        layer={\n                                                            rightPlayer === player1\n                                                                ? 'success'\n                                                                : 'alert'\n                                                        }\n                                                        animate\n                                                        show={\n                                                            show &&\n                                                            displayedTableItems >\n                                                                index\n                                                        }>\n                                                        {rightPlayer}\n                                                    </SoundWords>\n                                                </Link>\n                                            </div>,\n                                            <span\n                                                className={\n                                                    elodelta < 0 &&\n                                                    classes.eloLost\n                                                }>\n                                                {elodelta\n                                                    ? elodelta > 0\n                                                      ? `+${elodelta.toFixed(\n                                                            3,\n                                                        )}`\n                                                      : elodelta.toFixed(3)\n                                                    : '---'}\n                                            </span>,\n                                        ],\n                                    };\n                                },\n                            )}\n                        />\n                    ) : (\n                        <Loading />\n                    ))}\n            </>\n        );\n    }),\n);\n","import {\n    Col,\n    Frame,\n    Heading,\n    Link,\n    Loading,\n    Row,\n    withStyles,\n} from '@arwes/arwes';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faChevronRight} from '@fortawesome/free-solid-svg-icons';\nimport {useDebounce} from 'use-debounce';\nimport {useHistory} from 'react-router-dom';\nimport React, {useEffect, useState, useCallback} from 'react';\n\nimport {BASE_URL} from './Game';\nimport {PageWrapper} from './components/PageWrapper';\nimport {PlayerScoreboard} from './components/PlayerScoreboard';\nimport {RecentGames} from './components/RecentGames';\nimport {SoundWords} from './components';\nimport {useInterval} from './hooks/useInterval';\n\nconst styles = theme => ({\n    frameContent: {\n        padding: theme.padding,\n    },\n\n    recentGamesContainer: {\n        display: 'flex',\n    },\n    title: {flexGrow: 1},\n    latestLink: {\n        textTransform: 'initial',\n    },\n});\n\nconst HomePageRecentGamesTitle = ({classes, show}) => {\n    const history = useHistory();\n    return (\n        <div className={classes.recentGamesContainer}>\n            <div className={classes.title}>Recent games</div>\n            <div>\n                <Link\n                    onClick={() => history.push(`/game/latest`)}\n                    className={classes.latestLink}>\n                    <SoundWords animate show={show}>\n                        Watch latest\n                    </SoundWords>{' '}\n                      {show && <FontAwesomeIcon\n                            icon={faChevronRight}\n                        />}\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nconst HomePageFrameContent = ({show, classes, gameData}) => {\n    // Smoother animations\n    const [delayedShow] = useDebounce(show, 200);\n    const [delayedShow2] = useDebounce(show, 400);\n    return (\n        <div className={classes.frameContent}>\n            <p>\n                <SoundWords animate show={show}>\n                    Total of\n                </SoundWords>{' '}\n                {gameData ? (\n                    <SoundWords animate show={show}>\n                        {gameData.num_games.toString()}\n                    </SoundWords>\n                ) : (\n                    show && <Loading small />\n                )}{' '}\n                <SoundWords animate show={show}>\n                    games played.\n                </SoundWords>\n            </p>\n            <Row>\n                <Col s={12} m={12} l={6}>\n                    <PlayerScoreboard\n                        isGlobalRanking\n                        title={'Top 40'}\n                        show={delayedShow}\n                        scoreboardData={gameData ? gameData.highscores : null}\n                    />\n                </Col>\n                <Col s={12} m={12} l={6}>\n                    <RecentGames\n                        title={<HomePageRecentGamesTitle show={show} classes={classes} />}\n                        show={delayedShow2}\n                        lastGamesData={gameData ? gameData.last_games : null}\n                    />\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport const HomePage = withStyles(styles)(({show, classes}) => {\n    const [gameData, setGameData] = useState(null);\n    const loadData = useCallback(async () => {\n        const data = await fetch(`${BASE_URL}/info.json`);\n        const json = await data.json();\n        setGameData(json);\n    }, []);\n    useInterval(loadData, gameData && gameData.finished ? null : 2500);\n    useEffect(\n        () => {\n            setGameData(null);\n            loadData();\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [],\n    );\n\n    return (\n        <PageWrapper>\n            <Heading node=\"h1\">\n                <SoundWords animate show={show}>\n                    Rocket Paper Spacegoo\n                </SoundWords>\n            </Heading>\n            <Frame animate show={show} layer=\"primary\" corners={5} level={3}>\n                {anim => (\n                    <HomePageFrameContent\n                        show={anim.entered}\n                        gameData={gameData}\n                        classes={classes}\n                    />\n                )}\n            </Frame>\n        </PageWrapper>\n    );\n});\n","import {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n    Header,\n    Heading,\n    Link as ArwesLink,\n    Logo,\n    withStyles,\n} from '@arwes/arwes';\nimport {faRocket, faSatellite} from '@fortawesome/free-solid-svg-icons';\nimport {useHistory, Link as RouterLink} from 'react-router-dom';\nimport React, {useState} from 'react';\n\nimport {Container} from './container';\nimport {SoundWords} from './';\n\nconst styles = themes => ({\n    root: {\n        marginBottom: themes.margin,\n    },\n    container: {\n        display: 'flex',\n    },\n    logo: {margin: [themes.margin / 2, themes.margin, themes.margin / 2, 0]},\n    headingText: {\n        marginBottom: 0,\n        flexGrow: 1,\n        '@global': {\n            span: {\n                paddingTop: 3,\n            },\n        },\n    },\n    linkContainer: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    link: {\n        margin: [0, themes.margin],\n    },\n    linkIcon: {\n        marginRight: themes.margin / 2,\n    },\n});\n\nconst names = [\n    'Rock Paper Spacegoo',\n    'Rock Paper Scissors',\n    'Rolling Pickles Sensually',\n    'Rethink Play Station',\n    'Radical Peter Spinning',\n    'Rocket Propulsion Solution',\n];\n\nexport const NavBar = withStyles(styles)(({show, classes}) => {\n    const history = useHistory();\n    const [name, setName] = useState(names[0]);\n    return (\n        <Header animate className={classes.root}>\n            <Container className={classes.container}>\n                <Heading node=\"h4\" className={classes.headingText}>\n                    <Logo\n                        className={classes.logo}\n                        animate\n                        size={50}\n                        onClick={() =>\n                            setName(\n                                names[Math.floor(Math.random() * names.length)],\n                            )\n                        }\n                    />\n                    <ArwesLink href=\"#\" onClick={() => history.push('/')}>\n                        <SoundWords\n                            animate\n                            style={{marginLeft: '5px'}}\n                            show={show}>\n                            {name}\n                        </SoundWords>\n                    </ArwesLink>\n                </Heading>\n                <div className={classes.linkContainer}>\n                    <ArwesLink\n                        className={classes.link}\n                        animate\n                        href=\"https://github.com/qr4/rocket-scissor-spacegoo\">\n                        <FontAwesomeIcon\n                            className={classes.linkIcon}\n                            icon={faSatellite}\n                        />\n                        SourceCode\n                    </ArwesLink>\n                    <ArwesLink\n                        className={classes.link}\n                        href=\"#\"\n                        onClick={() => history.push('/')}>\n                        <FontAwesomeIcon\n                            className={classes.linkIcon}\n                            icon={faRocket}\n                        />\n                        Home\n                    </ArwesLink>\n                </div>\n            </Container>\n        </Header>\n    );\n});\n","import {\n    Col,\n    Link,\n    Loading,\n    Project,\n    Row,\n    Words,\n    withStyles,\n} from '@arwes/arwes';\nimport {useParams, useHistory} from 'react-router-dom';\nimport React, {useState, useEffect, useCallback} from 'react';\n\nimport {BASE_URL} from './Game';\nimport {PageWrapper} from './components/PageWrapper';\nimport {PlayerScoreboard} from './components/PlayerScoreboard';\nimport {RecentGames} from './components/RecentGames';\nimport {SoundWords} from './components';\nimport {useInterval} from './hooks/useInterval';\n\nconst styles = theme => ({\n    versusColumnEntry: {\n        display: 'flex',\n        justifyContent: 'space-evenly',\n    },\n    summary: {\n        marginTop: theme.margin,\n        marginBottom: theme.margin * 2,\n    },\n    rankLoading: {\n        padding: [0, theme.padding / 2],\n    },\n});\n\nexport const PlayerPage = withStyles(styles)(({show, classes}) => {\n    const {playerName} = useParams();\n\n    const history = useHistory();\n    const [showContent, setShowContent] = useState(false);\n    // Add a nice delay to between Heading and Content animation\n    useEffect(\n        () => {\n            if (show && !showContent) {\n                setTimeout(() => {\n                    setShowContent && setShowContent(true);\n                }, 1000);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [show],\n    );\n\n    const [playerData, setPlayerData] = useState(null);\n    const loadData = useCallback(\n        async () => {\n            const data = await fetch(\n                `${BASE_URL}/player/${playerName}/info.json`,\n            );\n            const json = await data.json();\n            setPlayerData(json);\n        },\n        [playerName],\n    );\n    useInterval(loadData, playerData && playerData.finished ? null : 5000);\n    useEffect(\n        () => {\n            setPlayerData(null);\n            loadData();\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [playerName],\n    );\n\n    return (\n        <PageWrapper>\n            <Project show={show} animate header={playerName}>\n                {playerData\n                    ? anim => (\n                          <>\n                              <div className={classes.summary}>\n                                  <SoundWords animate show={show}>\n                                      {`Total of ${\n                                          playerData.num_games\n                                      } played.`}\n                                  </SoundWords>{' '}\n                                  <SoundWords animate show={anim.entered}>\n                                      Ranked\n                                  </SoundWords>{' '}\n                                  {showContent ? (\n                                      <SoundWords\n                                          animate\n                                          show={showContent}\n                                          layer={\n                                              playerData.rank <= 3\n                                                  ? 'success'\n                                                  : null\n                                          }>\n                                          {`#${\n                                              playerData.rank\n                                                  ? playerData.rank.toString()\n                                                  : ''\n                                          }.`}\n                                      </SoundWords>\n                                  ) : (\n                                      show && (\n                                          <span className={classes.rankLoading}>\n                                              <Loading animate small />\n                                          </span>\n                                      )\n                                  )}{' '}\n                                  <SoundWords animate show={anim.entered}>\n                                      View\n                                  </SoundWords>{' '}\n                                  <Link\n                                      onClick={() =>\n                                          history.push(\n                                              `/player/${\n                                                  playerData.username\n                                              }/live`,\n                                          )\n                                      }>\n                                      <SoundWords animate show={anim.entered}>\n                                          {`${playerData.username}'s games`}\n                                      </SoundWords>\n                                  </Link>{' '}\n                                  <SoundWords animate show={anim.entered}>\n                                      live.\n                                  </SoundWords>\n                              </div>\n                              <Row>\n                                  <Col s={12} m={12} l={6}>\n                                      <PlayerScoreboard\n                                          title={\n                                              <Words\n                                                  animate\n                                                  show={\n                                                      showContent\n                                                  }>{`${playerName}'s scoreboard`}</Words>\n                                          }\n                                          show={showContent}\n                                          classes={classes}\n                                          scoreboardData={playerData.highscores}\n                                      />\n                                  </Col>\n                                  <Col s={12} m={12} l={6}>\n                                      <RecentGames\n                                          title={\n                                              <Words\n                                                  animate\n                                                  show={\n                                                      showContent\n                                                  }>{`${playerName}'s recent games`}</Words>\n                                          }\n                                          show={showContent}\n                                          classes={classes}\n                                          lastGamesData={playerData.last_games}\n                                          focusedPlayer={playerName}\n                                      />\n                                  </Col>\n                              </Row>\n                          </>\n                      )\n                    : show && <Loading />}\n            </Project>\n        </PageWrapper>\n    );\n});\n","import \"./App.css\";\n\nimport {Arwes, ThemeProvider, createTheme} from '@arwes/arwes';\nimport {Howl} from 'howler';\nimport {Route, BrowserRouter as Router, Switch} from 'react-router-dom';\nimport React, {useState, useEffect} from 'react';\n\nimport { SoundsProvider } from \"@arwes/sounds\";\n\nimport { Game } from \"./Game\";\nimport { HomePage } from './HomePage';\nimport { NavBar } from './components/nav_bar';\nimport {PlayerPage} from './PlayerPage';\n\nconst players = {\n    ask: new Howl({ src: [`${process.env.PUBLIC_URL}/sounds/ask.mp3`] }),\n    click: new Howl({ src: [`${process.env.PUBLIC_URL}/sounds/click.mp3`] }),\n    deploy: new Howl({ src: [`${process.env.PUBLIC_URL}/sounds/deploy.mp3`] }),\n    error: new Howl({ src: [`${process.env.PUBLIC_URL}/sounds/error.mp3`] }),\n    information: new Howl({\n        src: [`${process.env.PUBLIC_URL}/sounds/information.mp3`]\n    }),\n    typing: new Howl({ src: [`${process.env.PUBLIC_URL}/sounds/typing.mp3`] }),\n    warning: new Howl({ src: [`${process.env.PUBLIC_URL}/sounds/warning.mp3`] })\n};\nconst audio = {\n    mute: false\n};\n\nconst AppWrapper = () => (\n    <ThemeProvider theme={createTheme()}>\n        <SoundsProvider players={players} audio={audio}>\n            <Arwes\n                animate\n                background=\"/background-large.jpg\"\n                pattern=\"/glow.png\">\n                {anim => <App wrapperAnimEntered={anim.entered} />}\n            </Arwes>\n        </SoundsProvider>\n    </ThemeProvider>\n);\n\nfunction App({wrapperAnimEntered}) {\n    const [showContent, setShowContent] = useState(false);\n    // Add a nice delay to between Heading and Content animation\n    useEffect(\n        () => {\n            if (wrapperAnimEntered && !showContent) {\n                setTimeout(() => {\n                    setShowContent && setShowContent(true);\n                }, 250);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [wrapperAnimEntered],\n    );\n\n    return (\n        <Router>\n            <NavBar show={wrapperAnimEntered} />\n            <Switch>\n                <Route path=\"/player/:playerName/live\">\n                    <Game show={showContent} />\n                </Route>\n                <Route path=\"/player/:playerName\">\n                    <PlayerPage show={showContent} />\n                </Route>\n                <Route path=\"/game/latest\">\n                    <Game show={showContent} showLatest/>\n                </Route>\n                <Route path=\"/game/:id\">\n                    <Game show={showContent}/>\n                </Route>\n                <Route path=\"/\">\n                    <HomePage show={showContent} />\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default AppWrapper;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppWrapper from './App';\n\nReactDOM.render(<AppWrapper />, document.getElementById('root'));\n"],"sourceRoot":""}